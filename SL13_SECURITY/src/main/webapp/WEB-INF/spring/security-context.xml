<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

    <!-- 에러 : spring-security-4.2.xsd 수정. -->	
	 		
	 		<!-- 시큐리티 접근 권한 설정.  -->
	<!--  css, js, image, static(정적) 등등 보안 필터 체인x -->
	<!-- 밑에 것들은 보안 필터를 적용할 필요없다는 뜻이다.  -->
	<security:http pattern="/static/**" security="none"></security:http>	
	<security:http pattern="/design/**" security="none"></security:http>
	<security:http pattern="/css/**" security="none"></security:http>
	<security:http pattern="/js/**" security="none"></security:http>
	
<!-- 	<security:http pattern="/customer/**" security="none"></security:http>    -->
		
	<!-- use-expressions="true" -> 표현식을 사용하겠다는 의미  -->
	<security:http use-expressions="true"> 
	
			<!-- 해당 URL에 권한이 있는 지 체크하겠다.   -->
			<!-- <security:intercept-url pattern="요청URL" access="권한 체크(권하명, 표현식)"/> -->
			<!--use-expressions="true"에 false를 주면 access에 표현식을 사용할 수 없다.  -->
			<!-- 
						permitAll -> 로그인 하러 들어올 때 권한을 인증을 할 필요은 없다는 뜻.
		      <security:intercept-url pattern="/user/loginForm.htm" access="permitAll" />
		      
		      role_manager -> 권한명, 해당 권한이 있는 사람만 manager/**에 접근
		      <security:intercept-url pattern="/admin/manager/**" access="hasAuthority('ROLE_MANAGER')" />
		      
		      <security:intercept-url pattern="/member/**" access="isAuthenticated()" />
		      <security:intercept-url pattern="/**" access="permitAll" />
    	   -->
      
      			<!--/customer/noticeReg.htmㅇ 이름을 가지고 접근하면 중간에 인터셉트하여 권한을 검사하겠다는 의미.  -->
		      <security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()"/>
		      <security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')"/>
		      <security:intercept-url pattern="/**" access="permitAll" />
		      
		 <!--   <security:form-login/>   -->
		<!-- 1) 우리가만든 특정 URL로 이동하도록처리 :error-page설정. -->
		<!-- 주석처리하는이유는 권장은 2번임 -->
	 	<!-- <security:access-denied-handler error-page="/common/accessError.htm"/> -->
	 	<!-- 2) 접근금지 발생시 직접구현 -->
	 	<security:access-denied-handler ref="customAccessDeniedHandler"/>
	 	
	   <!-- 커스텀 로그인 페이지 -->
	   <security:form-login 
	   	  login-page="/joinus/login.htm"
	   	  authentication-success-handler-ref="customLoginSuccessHandler"
	   	  authentication-failure-url="/joinus/login.htm?error=true"	   	  
	   	  default-target-url="/index.htm"
	   />
	   
		 <!--로그인하면 메인페이지로바로이동 -->
		<security:logout logout-url="/joinus/logout.htm"
			invalidate-session="true"
			logout-success-url="/"
		/>   
	</security:http>	
	
	<!-- 인증 관리자  -->
	<security:authentication-manager> 
	<!-- 인증제공자 : 실무자. -->
		<security:authentication-provider>
			<security:user-service>
				<security:user name="hong" authorities="ROLE_USER" password="{noop}1234"/>
      		    <security:user name="admin" authorities="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" password="{noop}1234"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- csrf 토큰 사용하지 않겠다 -->
	<!-- <security:csrf disabled="true"/> -->

</beans>
























